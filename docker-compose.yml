services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./storage:/var/www/html/storage:cached
    env_file:
      - .env
    environment:
      - DB_HOST=mysql
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - laravel-network

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html:cached
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel-network

  reverb:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - .:/var/www/html:cached
    env_file:
      - .env
    environment:
      - DB_HOST=mysql
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/reverb || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["sh", "-c", "sleep 10 && php artisan reverb:start --host=0.0.0.0 --port=8080"]
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - laravel-network

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - laravel-network

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html:cached
    env_file:
        - .env
    environment:
      - DB_HOST=mysql
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
    command: ["php", "artisan", "queue:work", "--verbose", "--tries=3", "--timeout=90", "--sleep=3"]
    depends_on:
      mysql:
        condition: service_healthy
      reverb:
        condition: service_started
    networks:
      - laravel-network
    restart: unless-stopped

  vite:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - .:/var/www/html:cached
      - /var/www/html/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    networks:
      - laravel-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    env_file:
      - .env
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - mysql
    networks:
      - laravel-network

volumes:
  mysql_data:

networks:
  laravel-network:
    driver: bridge